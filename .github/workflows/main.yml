name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      working-directory: ./

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: make debug
      shell: bash
      working-directory: ${{env.working-directory}}

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      working-directory: ./

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Fast Test
      run: make testfast
      shell: bash
      working-directory: ${{env.working-directory}}

  fulltest:
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      working-directory: ./

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Pip
      uses: actions/cache@v1
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache CTags
      uses: actions/cache@v1.0.3
      id: cache-ctags
      with:
          path: "~/ctags"
          key: ${{secrets.CTAGS_VERSION}}

    - name: Cache Valgrind
      uses: actions/cache@v1.0.3
      id: cache-valgrind
      with:
          path: "~/valgrind"
          key: ${{secrets.VALGRIND_VERSION}}

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install Pip Dependencies
      run: pip install -r tools/requirements.txt
      working-directory: ${{env.working-directory}}

    - name: Install CTags
      env:
        CACHE_HIT: ${{steps.cache-ctags.outputs.cache-hit}}
        CTAGS_VERSION: ${{secrets.CTAGS_VERSION}}
      run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/ctags/* /
          else
            sudo apt-get install --yes exuberant-ctags=${{env.CTAGS_VERSION}}
            mkdir -p ~/ctags
            sudo dpkg -L exuberant-ctags | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/ctags/
          fi
      working-directory: ${{env.working-directory}}

    - name: Install Valgrind
      env:
        CACHE_HIT: ${{steps.cache-valgrind.outputs.cache-hit}}
        VALGRIND_VERSION: ${{secrets.VALGRIND_VERSION}}
      run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/valgrind/* /
          else
            sudo apt-get install --yes valgrind=${{env.VALGRIND_VERSION}}
            mkdir -p ~/valgrind
            sudo dpkg -L valgrind | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/valgrind/
          fi
      working-directory: ${{env.working-directory}}

    - name: Install CTags
      run: sudo apt-get install --yes exuberant-ctags
      working-directory: ${{env.working-directory}}

    - name: Test Everything
      run: make github_testeverything
      shell: bash
      working-directory: ${{env.working-directory}}
