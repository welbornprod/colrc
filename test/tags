!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLACK	../colr.h	/^    BLACK = 0,$/;"	e	enum:BasicValue_t
BLUE	../colr.h	/^    BLUE = 4,$/;"	e	enum:BasicValue_t
BRIGHT	../colr.h	/^    BRIGHT = 1,$/;"	e	enum:StyleValue_t
BasicValue	../colr.h	/^} BasicValue;$/;"	t	typeref:enum:BasicValue_t
BasicValue_t	../colr.h	/^typedef enum BasicValue_t {$/;"	g
CODEX_LEN	../colr.h	56;"	d
CODE_ANY_LEN	../colr.h	81;"	d
CODE_LEN	../colr.h	54;"	d
CODE_RGB_LEN	../colr.h	69;"	d
COLOR_INVALID	../colr.h	/^    COLOR_INVALID = -2,$/;"	e	enum:BasicValue_t
COLOR_LEN	../colr.h	66;"	d
COLOR_NONE	../colr.h	/^    COLOR_NONE = -1,$/;"	e	enum:BasicValue_t
COLOR_RGB_LEN	../colr.h	76;"	d
COLR_H	../colr.h	20;"	d
COLR_VERSION	../colr.h	26;"	d
CYAN	../colr.h	/^    CYAN = 6,$/;"	e	enum:BasicValue_t
ColorArg	../colr.h	/^struct ColorArg {$/;"	s
ColorInfo	../colr.h	/^struct ColorInfo {$/;"	s
ColorType	../colr.h	/^} ColorType;$/;"	t	typeref:enum:ColorType_t
ColorType_t	../colr.h	/^typedef enum ColorType_t {$/;"	g
DIM	../colr.h	/^    DIM = 2,$/;"	e	enum:StyleValue_t
ExtendedValue	../colr.h	/^typedef unsigned char ExtendedValue;$/;"	t
FLASH	../colr.h	/^    FLASH = 5,$/;"	e	enum:StyleValue_t
GREEN	../colr.h	/^    GREEN = 2,$/;"	e	enum:BasicValue_t
HIGHLIGHT	../colr.h	/^    HIGHLIGHT = 7,$/;"	e	enum:StyleValue_t
ITALIC	../colr.h	/^    ITALIC = 3,$/;"	e	enum:StyleValue_t
LIGHTBLUE	../colr.h	/^    LIGHTBLUE = 20,$/;"	e	enum:BasicValue_t
LIGHTCYAN	../colr.h	/^    LIGHTCYAN = 22,$/;"	e	enum:BasicValue_t
LIGHTGREEN	../colr.h	/^    LIGHTGREEN = 18,$/;"	e	enum:BasicValue_t
LIGHTMAGENTA	../colr.h	/^    LIGHTMAGENTA = 21,$/;"	e	enum:BasicValue_t
LIGHTNORMAL	../colr.h	/^    LIGHTNORMAL = 23$/;"	e	enum:BasicValue_t
LIGHTRED	../colr.h	/^    LIGHTRED = 17,$/;"	e	enum:BasicValue_t
LIGHTYELLOW	../colr.h	/^    LIGHTYELLOW = 19,$/;"	e	enum:BasicValue_t
MAGENTA	../colr.h	/^    MAGENTA = 5,$/;"	e	enum:BasicValue_t
MAX_COLOR_NAME_LEN	../colr.h	83;"	d
M_PI	../colr.h	48;"	d
NORMAL	../colr.h	/^    NORMAL = 22$/;"	e	enum:StyleValue_t
RED	../colr.h	/^    RED = 1,$/;"	e	enum:BasicValue_t
RESET	../colr.h	/^    RESET = 9,$/;"	e	enum:BasicValue_t
RESET_ALL	../colr.h	/^    RESET_ALL = 0,$/;"	e	enum:StyleValue_t
RGB	../colr.h	/^struct RGB {$/;"	s
STYLE_INVALID	../colr.h	/^    STYLE_INVALID = -2,$/;"	e	enum:StyleValue_t
STYLE_LEN	../colr.h	59;"	d
STYLE_NONE	../colr.h	/^    STYLE_NONE = -1,$/;"	e	enum:StyleValue_t
STYLE_RESET_ALL	../colr.h	51;"	d
StyleInfo	../colr.h	/^struct StyleInfo {$/;"	s
StyleValue	../colr.h	/^} StyleValue;$/;"	t	typeref:enum:StyleValue_t
StyleValue_t	../colr.h	/^typedef enum StyleValue_t {$/;"	g
TYPE_BASIC	../colr.h	/^    TYPE_BASIC = 0,$/;"	e	enum:ColorType_t
TYPE_EXTENDED	../colr.h	/^    TYPE_EXTENDED = 1,$/;"	e	enum:ColorType_t
TYPE_INVALID	../colr.h	/^    TYPE_INVALID = -2,$/;"	e	enum:ColorType_t
TYPE_INVALID_EXTENDED_RANGE	../colr.h	/^    TYPE_INVALID_EXTENDED_RANGE = -4,$/;"	e	enum:ColorType_t
TYPE_INVALID_RGB_RANGE	../colr.h	/^    TYPE_INVALID_RGB_RANGE = -3,$/;"	e	enum:ColorType_t
TYPE_RGB	../colr.h	/^    TYPE_RGB = 2,$/;"	e	enum:ColorType_t
UNDERLINE	../colr.h	/^    UNDERLINE = 4,$/;"	e	enum:StyleValue_t
UNUSED	../colr.h	/^    UNUSED = 8,$/;"	e	enum:BasicValue_t
WHITE	../colr.h	/^    WHITE = 7,$/;"	e	enum:BasicValue_t
XBLUE	../colr.h	/^    XBLUE = 13,$/;"	e	enum:BasicValue_t
XCYAN	../colr.h	/^    XCYAN = 15,$/;"	e	enum:BasicValue_t
XGREEN	../colr.h	/^    XGREEN = 11,$/;"	e	enum:BasicValue_t
XMAGENTA	../colr.h	/^    XMAGENTA = 14,$/;"	e	enum:BasicValue_t
XNORMAL	../colr.h	/^    XNORMAL = 16,$/;"	e	enum:BasicValue_t
XRED	../colr.h	/^    XRED = 10,$/;"	e	enum:BasicValue_t
XYELLOW	../colr.h	/^    XYELLOW = 12,$/;"	e	enum:BasicValue_t
YELLOW	../colr.h	/^    YELLOW = 3,$/;"	e	enum:BasicValue_t
_GNU_SOURCE	../colr.h	22;"	d
alloc_with_code	../colr.h	91;"	d
alloc_with_codes	../colr.h	98;"	d
alloc_with_rgb	../colr.h	106;"	d
alloc_with_style	../colr.h	114;"	d
argeq	../colr.h	137;"	d
basic	../colr.h	/^    BasicValue basic;$/;"	m	struct:ColorArg
blue	../colr.h	/^    unsigned char blue;$/;"	m	struct:RGB
color	../colr.h	/^    BasicValue color;$/;"	m	struct:ColorInfo
color_arg	../colr.h	152;"	d
ext	../colr.h	/^    ExtendedValue ext;$/;"	m	struct:ColorArg
ext	../colr.h	259;"	d
force_str	../colr.h	238;"	d
format_all	../colr.h	210;"	d
format_back	../colr.h	186;"	d
format_fore	../colr.h	169;"	d
green	../colr.h	/^    unsigned char green;$/;"	m	struct:RGB
main	test_colr.c	/^int main(int argc, char *argv[]) {$/;"	f
name	../colr.h	/^    char *name;$/;"	m	struct:ColorInfo
name	../colr.h	/^    char *name;$/;"	m	struct:StyleInfo
printferr	../colr.h	140;"	d
red	../colr.h	/^    unsigned char red;$/;"	m	struct:RGB
rgb	../colr.h	/^    struct RGB rgb;$/;"	m	struct:ColorArg	typeref:struct:ColorArg::RGB
rgb	../colr.h	253;"	d
run_format_bg_tests	test_colr.c	/^int run_format_bg_tests(void) {$/;"	f
run_format_fg_tests	test_colr.c	/^int run_format_fg_tests(void) {$/;"	f
run_from_str_tests	test_colr.c	/^int run_from_str_tests(void) {$/;"	f
run_helper_tests	test_colr.c	/^int run_helper_tests(void) {$/;"	f
streq	../colr.h	126;"	d
style	../colr.h	/^    StyleValue style;$/;"	m	struct:StyleInfo
test_BasicValue_from_str	test_colr.c	/^static void test_BasicValue_from_str(void **state) {$/;"	f	file:
test_ColorType_from_str	test_colr.c	/^static void test_ColorType_from_str(void **state) {$/;"	f	file:
test_format_bg	test_colr.c	/^static void test_format_bg(void **state) {$/;"	f	file:
test_format_bg_RGB	test_colr.c	/^static void test_format_bg_RGB(void **state) {$/;"	f	file:
test_format_bg_rgb	test_colr.c	/^static void test_format_bg_rgb(void **state) {$/;"	f	file:
test_format_bgx	test_colr.c	/^static void test_format_bgx(void **state) {$/;"	f	file:
test_format_fg	test_colr.c	/^static void test_format_fg(void **state) {$/;"	f	file:
test_str_startswith	test_colr.c	/^static void test_str_startswith(void **state) {$/;"	f	file:
type	../colr.h	/^    ColorType type;$/;"	m	struct:ColorArg
